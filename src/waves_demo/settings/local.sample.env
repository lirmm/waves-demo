# Django project configuration, if environ vars are missing
#
#   This is a sample file. Rename to local.env for a quick development
#   settings. Git will not track local.env as it contains confidential
#   information. So store a backup of this file outside this repo.
#
# Note: No spaces around '=' sign and no quotes for righthand values.


# SEE Django-environ documentation for more detail https://django-environ.readthedocs.io
# example syntax:
#  - postgres|mysql://username:password@127.0.0.1:5432/database
#  - sqlite:///[REPLACE_WITH_ABSOLUTE_PATH_TO_WEBAPP]/waves.sample.sqlite3
# DATABASE_URL=sqlite:///[REPLACE_WITH_ABSOLUTE_PATH_TO_DATABASE]

# $ python -c 'import random; import string; print("".join([random.SystemRandom().choice(string.digits + string.ascii_letters) for i in range(50)]))'
SECRET_KEY=your-secret-key-to-keep-secret-at-least-32-characters-long
# Command to create a new registration salt:
# $ python -c 'import random; import string; print("".join([random.SystemRandom().choice(string.digits + string.ascii_letters) for i in range(30)]))'
REGISTRATION_SALT=generate-your-key

# LIST all allowed hosts
ALLOWED_HOSTS=127.0.0.1,localhost

# EMAIL BACKEND CONFIGURATION
# Ex: smtp+ssl://user@email.com:password@localhost:25
# EMAIL_URL=smtp+ssl://user@email.com:password@localhost:25

# -- Test Adaptors
# - Galaxy
# WAVES_TEST_GALAXY_URL=
# WAVES_TEST_GALAXY_API_KEY=
# WAVES_TEST_GALAXY_PORT=
# WAVES_DEBUG_GALAXY=True
# -- SGE cluster
#: SGE cell default queue for tests
WAVES_TEST_SGE_CELL=all.q
# - SSH remote user / pass
# WAVES_TEST_SSH_HOST=
# WAVES_TEST_SSH_USER_ID=
# WAVES_TEST_SSH_USER_PASS=
# - SSH remote pub / private key
# WAVES_TEST_SSH_PUB_KEY=path-to-ssh-user-public-key
# WAVES_TEST_SSH_PRI_KEY=path-to-ssh-user-private-key
#: python command :  python -c 'from waves.utils.encrypt import EncryptedValue; print EncryptedValue.encrypt("YOU_PASSWORD")'
# WAVES_TEST_SSH_PASS_KEY=your-test-ssh-user-key-pass-phrase



